{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","styles","actions","addContact","createAction","contact","payload","id","uuidv4","deleteContact","changeFilter","getContacts","state","contacts","items","getFilter","filter","getFiltredContact","name","toLowerCase","includes","initialState","number","ContactForm","useState","setContact","useSelector","dispatch","useDispatch","handleChangeInput","e","target","value","prev","wrapper","onSubmit","preventDefault","contactToAdd","find","el","findDuplicateContact","alert","form","label","onChange","type","input","pattern","title","required","button","Filter","ContactList","filtredContacts","list","map","item","text","onClick","App","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfigContacts","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.fc5cd0b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3OdE3\",\"input\":\"Filter_input__bxI0m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3rGT8\"};","import React from 'react';\n\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nexport default Container;\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('contacts/add', contact => ({\r\n  payload: { id: uuidv4(), ...contact },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst actions = { addContact, deleteContact, changeFilter };\r\n\r\nexport default actions;\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getFiltredContact = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport actions from '../../redux/contacts/contacts-actions';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\n\r\nimport styles from './ContactForm.module.css';\r\n\r\nconst initialState = { name: '', number: '' };\r\n\r\nexport default function ContactForm() {\r\n  const [contact, setContact] = useState({ ...initialState });\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChangeInput = e => {\r\n    const { name, value } = e.target;\r\n    setContact(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (findDuplicateContact(contact)) {\r\n      alert(`${contact.name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    dispatch(actions.addContact(contact));\r\n    setContact({ ...initialState });\r\n  };\r\n\r\n  function findDuplicateContact(contact) {\r\n    const contactToAdd = contact.name.toLowerCase();\r\n    return contacts.find(el => el.name.toLowerCase() === contactToAdd);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <form onSubmit={handleSubmit} className={styles.form}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            value={contact.name}\r\n            onChange={handleChangeInput}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className={styles.input}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            value={contact.number}\r\n            onChange={handleChangeInput}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            className={styles.input}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport actions from '../../redux/contacts/contacts-actions';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        value={value}\r\n        onChange={e => dispatch(actions.changeFilter(e.target.value))}\r\n        className={styles.input}\r\n        name=\"filter\"\r\n        type=\"text\"\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport actions from '../../redux/contacts/contacts-actions';\r\nimport { getFiltredContact } from '../../redux/contacts/contacts-selectors';\r\n\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n  const filtredContacts = useSelector(getFiltredContact);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ul className={styles.list}>\r\n      {filtredContacts.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.item}>\r\n          <p className={styles.text}>{name}:</p>\r\n          <p className={styles.text}>{number}</p>\r\n          <button\r\n            onClick={() => dispatch(actions.deleteContact(id))}\r\n            className={styles.button}\r\n            type=\"button\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nfunction App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport actions from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\n\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst persistConfigContacts = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: { contacts: persistReducer(persistConfigContacts, contactsReducer) },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './App';\n\nimport { store, persistor } from './redux/store';\n\nimport './styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate loading={null} persistor={persistor}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactForm_wrapper__BjywE\",\"form\":\"ContactForm_form__3TfaC\",\"label\":\"ContactForm_label__1gRDz\",\"input\":\"ContactForm_input__jh6GP\",\"button\":\"ContactForm_button__snMSp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1_ZYF\",\"text\":\"ContactList_text__1pLVD\",\"button\":\"ContactList_button__n_29a\"};"],"sourceRoot":""}